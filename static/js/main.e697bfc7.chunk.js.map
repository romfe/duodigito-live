{"version":3,"sources":["api/apiCalculo.ts","components/EntradaDados/index.tsx","components/Historico/index.tsx","App.tsx","styles/global.ts","index.tsx"],"names":["axios","create","baseURL","EntradaDados","props","useState","numeroDeEntrada","setNumeroDeEntrada","enviarDados","enviarDadosHandler","type","id","name","onChange","event","parseFloat","target","value","onKeyDown","keyboardEvent","key","placeholder","className","styles","input","onClick","button","css","Historico","table","historico","map","operacao","index","numeroInicial","solucao","tempoExecucao","container","calculoSection","historicoSection","groupContainer","App","historicoDeCalculos","setHistoricoDeCalculos","numero","a","length","toast","error","api","get","response","existeSolucao","data","success","GlobalCss","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uQAEeA,E,OAAAA,EAAMC,OAAO,CAG1BC,QAAS,yD,OCEEC,EAAe,SAACC,GAA8B,IAAD,EACVC,mBAAS,GADC,mBACjDC,EADiD,KAChCC,EADgC,KAalDC,EAAc,WAClBJ,EAAMK,mBAAmBH,IAG3B,OACE,qCACE,uBACEI,KAAK,SACLC,GAAG,SACHC,KAAK,SACLC,SApBsB,SAACC,GAC3BP,EAAmBQ,WAAWD,EAAME,OAAOC,SAoBvCC,UAjBmB,SAACC,GACE,UAAtBA,EAAcC,KAChBZ,KAgBEa,YAAY,sBACZC,UAAWC,EAAOC,QAEpB,wBACEC,QAASjB,EACTc,UAAWC,EAAOG,OAFpB,wBAUAH,EAAS,CACbC,MAAOG,YAAF,wRAaLD,OAAQC,YAAF,oWC9CKC,EAAY,SAACxB,GAExB,OAGE,cADA,CACA,SAAOkB,UAAWC,EAAOM,MAAzB,UACE,gCACE,+BACE,2CACA,0DACA,+DAIJ,gCACGzB,EAAM0B,UAAUC,KAAI,SAACC,EAA8BC,GAA/B,OACnB,+BACE,6BAAKD,EAASE,gBACd,6BAAKF,EAASG,UACd,6BAAKH,EAASI,kBAHPH,YAYbV,EAAS,CACbM,MAAOF,YAAF,kYCyCP,I,EAAMJ,EAAS,CACbc,UAAWV,YAAF,gMAWTW,eAAgBX,YAAF,uQAcdY,iBAAkBZ,YAAF,6PAchBa,eAAgBb,YAAF,qLAUDc,EApHf,WAAe,MAEyCpC,mBAEpD,IAJW,mBAENqC,EAFM,KAEeC,EAFf,KAWPnC,EAAW,uCAAG,WAAOoC,GAAP,iBAAAC,EAAA,2DACdD,EAAS,KADK,sBAEZF,EAAoBI,QANY,IAIpB,gBAGdC,IAAMC,MACJ,qFAJY,gDAQWC,EAAIC,IAAJ,yBAA0BN,IARrC,OAQNO,EARM,OAWkB,KAFxBC,EAAoCD,EAASE,MAEjClB,QAGhBY,IAAMC,MACJ,yEAIFL,EAAuB,GAAD,mBAAKD,GAAL,CAA0BS,EAASE,QACzDN,IAAMO,QAAN,gDAA8CF,EAAcjB,WApBlD,kDAuBZY,IAAMC,MAAM,6CAvBA,gCA2BhBD,IAAMC,MAAM,mDA3BI,0DAAH,sDA+BjB,OACE,uBAAM1B,UAAWC,EAAOc,UAAxB,UAGE,yBAASf,UAAWC,EAAOe,eAA3B,SACE,sBAAKhB,UAAWC,EAAOiB,eAAvB,UACE,yDACA,cAAC,EAAD,CAAc/B,mBAAoBD,SAKtC,yBAASc,UAAWC,EAAOgB,iBAA3B,SACE,sBAAKjB,UAAWC,EAAOiB,eAAvB,UACE,8CACA,cAAC,EAAD,CAAWV,UAAWY,SAI1B,cAAC,IAAD,QC5EOa,EAAY5B,YAAH,sTCItB6B,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,IAAD,CAAQnC,OAAQgC,IAChB,cAAC,EAAD,OAEFI,SAASC,eAAe,W","file":"static/js/main.e697bfc7.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default axios.create({\n  //baseURL: \"http://localhost:8080/\"\n  // link da API rodando no heroku:\n  baseURL: \"https://heroku-springboot-backend-duo.herokuapp.com/\"\n});","import { useState } from \"react\";\nimport { css } from \"@emotion/css\";\n\ninterface EntradaDadosProps {\n  enviarDadosHandler: (numeroEntrada: number) => void;\n}\n\nexport const EntradaDados = (props: EntradaDadosProps) => {\n  const [numeroDeEntrada, setNumeroDeEntrada] = useState(0);\n\n  const changeNumeroHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setNumeroDeEntrada(parseFloat(event.target.value));\n  };\n\n  const executarComEnter = (keyboardEvent: React.KeyboardEvent<HTMLInputElement>) => {\n    if (keyboardEvent.key === 'Enter') {\n      enviarDados();\n    }\n  }\n\n  const enviarDados = () => {\n    props.enviarDadosHandler(numeroDeEntrada);\n  };\n\n  return (\n    <>\n      <input\n        type=\"number\"\n        id=\"numero\"\n        name=\"numero\"\n        onChange={changeNumeroHandler}\n        onKeyDown={executarComEnter}\n        placeholder=\"Digite um número\"\n        className={styles.input}\n      />\n      <button\n        onClick={enviarDados}\n        className={styles.button}\n      >\n        Enviar\n      </button>\n    </>\n  );\n};\n\nconst styles = {\n  input: css`\n    margin-top: 2rem;\n    padding: 0 1.5rem;\n    height: 3rem;\n    border-radius: 0.25rem;\n    background: #e7e9ee;\n    border: 1px solid #d7d7d7;\n    font-weight: 400;\n    font-size: 1rem;\n    &::placeholder {\n      color: #969cb3;\n    }\n  `,\n  button: css`\n    padding: 0.25rem;\n    width: 7rem;\n    height: 3rem;\n    background: #5429cc;\n    color: #fff;\n    border-radius: 0.25rem;\n    border: 0;\n    font-size: 1rem;\n    margin-top: 1.5rem;\n    font-weight: 600;\n    transition: filter 0.5s;\n    cursor: pointer;\n    &:hover {\n      filter: brightness(0.9);\n    }\n  `,\n};","// importação das bibliotecas\nimport { css } from '@emotion/css';\n\ninterface InterfaceHistorico {\n  solucao: number,\n  numeroInicial: number,\n  tempoExecucao: number\n}\n\ninterface HistoricoProps {\n  historico: InterfaceHistorico[]\n}\n\nexport const Historico = (props: HistoricoProps) => {\n\n  return (\n\n    // tabela do histórico de consultas\n    <table className={styles.table}>\n      <thead>\n        <tr>\n          <td>Número</td>\n          <td>Múltiplo Duodígito</td>\n          <td>Tempo (em nanossegundos)</td>\n        </tr>\n      </thead>\n\n      <tbody>\n        {props.historico.map((operacao: InterfaceHistorico, index) =>\n          <tr key={index}>\n            <td>{operacao.numeroInicial}</td>\n            <td>{operacao.solucao}</td>\n            <td>{operacao.tempoExecucao}</td>\n          </tr>\n        )}\n      </tbody>\n\n    </table>\n  );\n}\n\nconst styles = {\n  table: css`\n    margin-top:0;\n    border-spacing: 0 0.5rem;\n    tr{\n      color:#363F5F;\n      font-weight:400;\n      padding: 1rem 2rem;\n      text-align:center;\n      line-height:1.5rem;\n    }\n    td{\n      padding: 1rem 2rem;\n      border:0;\n      background: #FFFFFF;\n      color:#363F5F;\n      border-radius:.25rem;\n      text-align:center;\n    }\n`}","//importação de bibliotecas\nimport { useState } from \"react\";\nimport { css } from \"@emotion/css\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\n//importação de componentes da aplicação\nimport api from \"./api/apiCalculo\";\nimport { EntradaDados } from \"./components/EntradaDados\";\nimport { Historico } from \"./components/Historico\";\n\ninterface InterfaceHistorico {\n  solucao: number;\n  numeroInicial: number;\n  tempoExecucao: number;\n}\n\nfunction App() {\n  // estado para armazenar o histórico de consultas do usuário\n  const [historicoDeCalculos, setHistoricoDeCalculos] = useState<\n    InterfaceHistorico[]\n  >([]);\n\n  // variável que armazena o máximo de consultas permitidas pelo usuário por sessão\n  const numeroMaximoDeConsultas: number = 30;\n\n  // função que envia os dados à api e adiciona a resposta à constante historicoDeCalculos\n  // também verifica o número informado pelo usuário e exibe mensagens de erro\n  const enviarDados = async (numero: number) => {\n    if (numero > 100) {\n      if (historicoDeCalculos.length >= numeroMaximoDeConsultas) {\n        toast.error(\n          \"Número máximo de consultas atingido. Atualize a página e tente novamente\"\n        );\n      } else {\n        try {\n          const response = await api.get(`/calculo?input=${numero}`);\n          const existeSolucao: InterfaceHistorico = response.data;\n\n          if (existeSolucao.solucao === 0) {\n            // caso a API não tenha encontrado solução, retorna o valor 0\n            // a mensagem de erro é exibida ao usuário\n            toast.error(\n              \"Não foi encontrada solução. Verifique o número informado\"\n            );\n          } else {\n            // caso a API retorne um valor válido, a nova resposta é armazenada\n            setHistoricoDeCalculos([...historicoDeCalculos, response.data]);\n            toast.success(`O menor múltiplo duodígito é ${existeSolucao.solucao}`);\n          }\n        } catch (error) {\n          toast.error(\"Erro na comunicação com o servidor.\");\n        }\n      }\n    } else {\n      toast.error(\"Por favor insira um número maior do que 100.\");\n    }\n  };\n\n  return (\n    <main className={styles.container}>\n\n      {/*Seção da entrada de dados*/}\n      <section className={styles.calculoSection}>\n        <div className={styles.groupContainer}>\n          <h2>Cálculo Duodígito</h2>\n          <EntradaDados enviarDadosHandler={enviarDados} />\n        </div>\n      </section>\n\n      {/*Seção do histórico de consultas*/}\n      <section className={styles.historicoSection}>\n        <div className={styles.groupContainer}>\n          <h2>Histórico</h2>\n          <Historico historico={historicoDeCalculos} />\n        </div>\n      </section>\n\n      <ToastContainer />\n    </main>\n  );\n}\n\nconst styles = {\n  container: css`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n\n    @media (max-width: 720px) {\n      flex-direction: column;\n    }\n  `,\n\n  calculoSection: css`\n    width: 50vw;\n    background: #0099ff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n\n    @media (max-width: 720px) {\n      width: 100vw;\n      height: 50vh;\n    }\n  `,\n\n  historicoSection: css`\n    width: 50vw;\n    background: #fff;\n    display: flex;\n    margin-top: 50px;\n    align-items: center;\n    flex-direction: column;\n\n    @media (max-width: 720px) {\n      width: 100vw;\n      height: 50vh;\n    }\n  `,\n\n  groupContainer: css`\n    max-width: 80%;\n    height: 200px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-start;\n    flex-direction: column;\n  `,\n};\n\nexport default App;","import { css } from \"@emotion/react\";\n\nexport const GlobalCss = css`\n  * {\n    margin: 0;\n    padding: 0;\n    box-sizing: border-box;\n  }\n\n  html {\n    @media (max-width: 1080px) {\n      font-size: 93.75%; // 15px\n    }\n\n    @media (max-width: 720px) {\n      font-size: 87.5%; // 14px\n    }\n  }\n\n  button {\n    cursor: pointer;\n  }\n`;","import { Global } from \"@emotion/react\";\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { GlobalCss } from \"./styles/global\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Global styles={GlobalCss} />\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);"],"sourceRoot":""}